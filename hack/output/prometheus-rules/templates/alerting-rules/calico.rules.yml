---
# Source: prometheus-rules/templates/alerting-rules/calico.rules.yml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: "prometheus-rules"
    app.kubernetes.io/instance: "RELEASE-NAME"
    app.giantswarm.io/branch: "[[ -Branch ]]"
    app.giantswarm.io/commit: "[[ .SHA ]]"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "[[ .AppVersion ]]"
    helm.sh/chart: "prometheus-rules-2.1.1"
    giantswarm.io/service-type: managed
  name: calico.rules
  namespace: monitoring
spec:
  groups:
  - name: calico
    rules:
    - alert: CalicoRestartRateTooHigh
      annotations:
        description: 'Calico-node {{ $labels.namespace }}/{{ $labels.pod }} restarted {{ $value }} times.'
        opsrecipe: calico-restarts-high/
      expr: increase(kube_pod_container_status_restarts_total{container="calico-node"}[30m]) > 3
      for: 5m
      labels:
        area: kaas
        cancel_if_outside_working_hours: "false"
        severity: notify
        team: phoenix
        topic: kubernetes
    - alert: CalicoNodeMemoryHighUtilization
      annotations:
        description: |-
          High memory saturation value ({{ $value }}) for container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }}.
          If set memory requests value is equals to memory limits value is likely that the pod will be evicted.
          If no limits are set then the pod will burst.
        opsrecipe: calico-memory-usage-high/
      expr: sum by (node, pod, namespace, container) (container_memory_working_set_bytes{container="calico-node"}) / sum by(node, pod, namespace, container) (kube_pod_container_resource_requests_memory_bytes{container="calico-node"}) >= 0.85
      for: 5m
      labels:
        area: kaas
        cancel_if_outside_working_hours: "false"
        severity: notify
        team: phoenix
        topic: kubernetes
