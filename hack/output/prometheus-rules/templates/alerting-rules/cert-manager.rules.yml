---
# Source: prometheus-rules/templates/alerting-rules/cert-manager.rules.yml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: "prometheus-rules"
    app.kubernetes.io/instance: "RELEASE-NAME"
    app.giantswarm.io/branch: "[[ -Branch ]]"
    app.giantswarm.io/commit: "[[ .SHA ]]"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "[[ .AppVersion ]]"
    helm.sh/chart: "prometheus-rules-2.1.1"
    giantswarm.io/service-type: managed
  name: cert-manager.rules
  namespace: monitoring
spec:
  groups:
  - name: cert-manager
    rules:
    - alert: CertManagerPodHighMemoryUsage
      annotations:
        description: |-
          High memory usage ({{ $value }}) for container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }}.
          If memory usage value is equal to memory limit value then it is likely the pod will be evicted.
          If no limits are set then the pod will burst.
          
      expr: sum by (pod, namespace, container) (container_memory_working_set_bytes{container=~"(cert-manager)"}) / sum by (pod, namespace, container) (kube_pod_container_resource_requests_memory_bytes{container=~"(cert-manager)"}) >= 0.85
      for: 10m
      labels:
        area: kaas
        cancel_if_outside_working_hours: "false"
        severity: notify
        team: phoenix
        topic: observability
    - alert: CertManagerDown
      annotations:
        description: 'cert-manager in namespace {{ $labels.namespace }} is down.'
        opsrecipe: cert-manager-down/
      expr: label_replace(up{app=~"cert-manager-(app|controller)"}, "ip", "$1.$2.$3.$4", "node", "ip-(\\d+)-(\\d+)-(\\d+)-(\\d+).*") == 0
      for: 15m
      labels:
        area: kaas
        cancel_if_outside_working_hours: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_kubelet_down: "true"
        severity: page
        team: phoenix
        topic: cert-manager
    - alert: CertManagerTooManyCertificateRequests
      annotations:
        description: 'There are too many CertificateRequests in cluster {{ $labels.cluster_id }}.'
        opsrecipe: cert-requests-too-many/
      expr: sum by (cluster_id) (etcd_kubernetes_resources_count{kind="certificaterequests.cert-manager.io"}) > 10000
      for: 15m
      labels:
        area: kaas
        cancel_if_outside_working_hours: "true"
        severity: notify
        team: phoenix
        topic: cert-manager
