---
# Source: prometheus-rules/templates/alerting-rules/certificate.workload-cluster.rules.yml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: "prometheus-rules"
    app.kubernetes.io/instance: "RELEASE-NAME"
    app.giantswarm.io/branch: "[[ -Branch ]]"
    app.giantswarm.io/commit: "[[ .SHA ]]"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "[[ .AppVersion ]]"
    helm.sh/chart: "prometheus-rules-2.1.1"
    giantswarm.io/service-type: managed
    cluster_type: "workload_cluster"
  name: certificate.workload-cluster.rules
  namespace: monitoring
spec:
  groups:
  - name: certificate
    rules:
    - alert: WorkloadClusterCertificateWillExpireInLessThanAMonth
      annotations:
        description: 'Certificate {{ $labels.path }} on {{ $labels.node }} will expire in less than a month.'
        opsrecipe: renew-certificates/
      expr: (cert_exporter_not_after{cluster_type="workload_cluster", path!="/etc/kubernetes/ssl/service-account-crt.pem"} - time()) < 4 * 7 * 24 * 60 * 60
      for: 5m
      labels:
        area: kaas
        cancel_if_outside_working_hours: "true"
        severity: page
        team: teddyfriends
        topic: security
    - alert: ClusterCertificateExpirationMetricsMissing
      annotations:
        description: 'Certificate metrics are missing for cluster {{ $labels.cluster_id }}.'
      expr: max(up{cluster_id!=""}) by (cluster_id) unless on (cluster_id) count (cert_exporter_not_after) by (cluster_id) > 0
      for: 30m
      labels:
        area: kaas
        cancel_if_outside_working_hours: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        severity: page
        team: phoenix
        topic: security
