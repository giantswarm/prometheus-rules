---
# Source: prometheus-rules/templates/alerting-rules/credentiald.rules.yml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: "prometheus-rules"
    app.kubernetes.io/instance: "RELEASE-NAME"
    app.giantswarm.io/branch: "[[ -Branch ]]"
    app.giantswarm.io/commit: "[[ .SHA ]]"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "[[ .AppVersion ]]"
    helm.sh/chart: "prometheus-rules-2.1.1"
    giantswarm.io/service-type: managed
    cluster_type: "management_cluster"
  name: credentiald.rules
  namespace: monitoring
spec:
  groups:
  - name: credentiald
    rules:
    - alert: CredentialdCantReachKubernetes
      annotations:
        description: 'Credentiald can''t reach Kubernetes.'
      expr: rate(credentiald_credentials_kubernetes_create_error_total[5m]) + rate(credentiald_credentials_kubernetes_list_error_total[5m]) + rate(credentiald_credentials_kubernetes_search_error_total[5m]) > 0
      for: 15m
      labels:
        area: kaas
        severity: notify
        team: phoenix
        topic: orchestration
    - alert: DefaultCredentialsMissing
      annotations:
        description: 'Default credentials are missing.'
      expr: credentiald_credential_info{name="credential-default"} != 1
      for: 15m
      labels:
        area: kaas
        severity: notify
        team: phoenix
        topic: orchestration
    - alert: TooManyCredentialsForOrganization
      annotations:
        description: 'There are too many credentials for the organization ''{{ $labels.organization }}''.'
      expr: sum(credentiald_credential_info) by (organization) / 2 > 1
      for: 15m
      labels:
        area: kaas
        severity: notify
        team: phoenix
        topic: orchestration
