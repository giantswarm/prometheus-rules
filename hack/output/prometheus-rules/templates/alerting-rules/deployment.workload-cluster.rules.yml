---
# Source: prometheus-rules/templates/alerting-rules/deployment.workload-cluster.rules.yml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: "prometheus-rules"
    app.kubernetes.io/instance: "RELEASE-NAME"
    app.giantswarm.io/branch: "[[ -Branch ]]"
    app.giantswarm.io/commit: "[[ .SHA ]]"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "[[ .AppVersion ]]"
    helm.sh/chart: "prometheus-rules-2.1.1"
    giantswarm.io/service-type: managed
    cluster_type: "workload_cluster"
  name: deployment.workload-cluster.rules
  namespace: monitoring
spec:
  groups:
  - name: deployment
    rules:
    - alert: WorkloadClusterDeploymentNotSatisfied
      annotations:
        description: 'Deployment {{ $labels.namespace}}/{{ $labels.deployment }} is not satisfied.'
        opsrecipe: workload-cluster-deployment-not-satisfied/
      expr: kube_deployment_status_replicas_unavailable{cluster_type="workload_cluster", deployment="chart-operator"} > 0
      for: 30m
      labels:
        area: managedservices
        cancel_if_outside_working_hours: "false"
        severity: page
        team: honeybadger
        topic: releng
    - alert: WorkloadClusterDeploymentNotSatisfiedKaas
      annotations:
        description: 'Deployment {{ $labels.namespace}}/{{ $labels.deployment }} is not satisfied.'
        opsrecipe: workload-cluster-deployment-not-satisfied/
      expr: kube_deployment_status_replicas_unavailable{cluster_type="workload_cluster", deployment=~"metrics-server|vertical-pod-autoscaler-app-admission-controller|vertical-pod-autoscaler-app-recommender|vertical-pod-autoscaler-app-updater|aws-pod-identity-webhook.*"} > 0
      for: 30m
      labels:
        area: kaas
        cancel_if_outside_working_hours: "false"
        severity: page
        team: phoenix
        topic: observability
    - alert: WorkloadClusterManagedDeploymentNotSatisfiedCabbage
      annotations:
        description: 'Deployment {{ $labels.namespace}}/{{ $labels.deployment }} is not satisfied.'
        opsrecipe: workload-cluster-managed-deployment-not-satisfied/
      expr: managed_app_deployment_status_replicas_unavailable{cluster_type="workload_cluster", managed_app=~"external-dns.*|kong.*"} > 0
      for: 30m
      labels:
        area: managedservices
        cancel_if_outside_working_hours: "false"
        severity: page
        team: cabbage
        topic: releng
    - alert: WorkloadClusterManagedDeploymentNotSatisfiedHydra
      annotations:
        description: 'Deployment {{ $labels.namespace}}/{{ $labels.deployment }} is not satisfied.'
        opsrecipe: workload-cluster-managed-deployment-not-satisfied/
      expr: managed_app_deployment_status_replicas_unavailable{cluster_type="workload_cluster", managed_app=~"cert-manager.*"} > 0
      for: 30m
      labels:
        area: managedservices
        cancel_if_outside_working_hours: "false"
        severity: page
        team: hydra
        topic: releng
    - alert: WorkloadClusterDeploymentScaledDownToZero
      annotations:
        description: 'Deployment {{ $labels.namespace}}/{{ $labels.deployment }} has been scaled down to zero for prolonged period of time.'
      expr: kube_deployment_status_replicas_available{cluster_type="workload_cluster", deployment="chart-operator"} + kube_deployment_status_replicas_unavailable{cluster_type="workload_cluster", deployment="chart-operator"} == 0
      for: 4h
      labels:
        area: managedservices
        cancel_if_outside_working_hours: "false"
        severity: notify
        team: honeybadger
        topic: releng
