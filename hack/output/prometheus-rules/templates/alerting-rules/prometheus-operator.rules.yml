---
# Source: prometheus-rules/templates/alerting-rules/prometheus-operator.rules.yml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: "prometheus-rules"
    app.kubernetes.io/instance: "RELEASE-NAME"
    app.giantswarm.io/branch: "[[ -Branch ]]"
    app.giantswarm.io/commit: "[[ .SHA ]]"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "[[ .AppVersion ]]"
    helm.sh/chart: "prometheus-rules-2.1.1"
    giantswarm.io/service-type: managed
    cluster_type: "management_cluster"
  name: prometheus-operator.rules
  namespace: monitoring
spec:
  groups:
  - name: prometheus-operator
    rules:
    - alert: PrometheusOperatorDown
      annotations:
        description: 'Prometheus-operator ({{ $labels.instance }}) is down.'
      expr: up{app="prometheus-operator"} == 0
      for: 15m
      labels:
        area: empowerment
        cancel_if_apiserver_down: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_scrape_timeout: "true"
        cancel_if_cluster_has_no_workers: "true"
        cancel_if_outside_working_hours: "false"
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorListErrors
      annotations:
        description: Errors while performing List operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.
      expr: (sum by (controller,namespace) (rate(prometheus_operator_list_operations_failed_total{app="prometheus-operator",namespace="monitoring"}[10m])) / sum by (controller,namespace) (rate(prometheus_operator_list_operations_total{app="prometheus-operator",namespace="monitoring"}[10m]))) > 0.4
      for: 15m
      labels:
        area: empowerment
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorWatchErrors
      annotations:
        description: Errors while performing watch operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.
      expr: (sum by (controller,namespace) (rate(prometheus_operator_watch_operations_failed_total{app="prometheus-operator",namespace="monitoring"}[10m])) / sum by (controller,namespace) (rate(prometheus_operator_watch_operations_total{app="prometheus-operator",namespace="monitoring"}[10m]))) > 0.4
      for: 15m
      labels:
        area: empowerment
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorSyncFailed
      annotations:
        description: Controller {{ $labels.controller }} in {{ $labels.namespace }} namespace fails to reconcile {{ $value }} objects.
      expr: min_over_time(prometheus_operator_syncs{status="failed",app="prometheus-operator",namespace="monitoring"}[5m]) > 0
      for: 10m
      labels:
        area: empowerment
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorReconcileErrors
      annotations:
        description: '{{ $value | humanizePercentage }} of reconciling operations failed for {{ $labels.controller }} controller in {{ $labels.namespace }} namespace.'
      expr: (sum by (controller,namespace) (rate(prometheus_operator_reconcile_errors_total{app="prometheus-operator",namespace="monitoring"}[5m]))) / (sum by (controller,namespace) (rate(prometheus_operator_reconcile_operations_total{app="prometheus-operator",namespace="monitoring"}[5m]))) > 0.1
      for: 10m
      labels:
        area: empowerment
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorNodeLookupErrors
      annotations:
        description: Errors while reconciling Prometheus in {{ $labels.namespace }} Namespace.
      expr: rate(prometheus_operator_node_address_lookup_errors_total{app="prometheus-operator",namespace="monitoring"}[5m]) > 0.1
      for: 10m
      labels:
        area: empowerment
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorNotReady
      annotations:
        description: Prometheus operator in {{ $labels.namespace }} namespace isn't ready to reconcile {{ $labels.controller }} resources.
      expr: min by(namespace, controller) (max_over_time(prometheus_operator_ready{app="prometheus-operator",namespace="monitoring"}[5m]) == 0)
      for: 5m
      labels:
        area: empowerment
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorRejectedResources
      annotations:
        description: Prometheus operator in {{ $labels.namespace }} namespace rejected {{ printf "%0.0f" $value }} {{ $labels.controller }}/{{ $labels.resource }} resources.
      expr: min_over_time(prometheus_operator_managed_resources{state="rejected",app="prometheus-operator",namespace="monitoring"}[5m]) > 0
      for: 5m
      labels:
        area: empowerment
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
