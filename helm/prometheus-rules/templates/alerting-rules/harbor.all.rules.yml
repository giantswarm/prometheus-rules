apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: prometheus-harbor-example-rules
  namespace: {{ .Values.namespace }}
spec:
  groups:
  - name: harbor-alerts
    rules:
    - alert: HarborDown
      annotations:
        description: '{{`{{ $labels.instance }} (components) {{ $labels.component }} has been down for more than 5 minutes.`}}'
        summary: '{{`Instance {{ $labels.instance }} down.`}}'
      expr: harbor_up == 0
      for: 5m
      labels:
        severity: critical
        app: harbor
        cancel_if_apiserver_down: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_scrape_timeout: "true"
        cancel_if_outside_working_hours: "true"
    - alert: HarborUnhealthy
      annotations:
        description: '{{`{{ $labels.instance }} is unhealthy.`}}'
        summary: "Habor cluster is unhealthy."
      expr: harbor_health == 0
      for: 5m
      labels:
        severity: critical
        app: harbor
        cancel_if_apiserver_down: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_scrape_timeout: "true"
        cancel_if_outside_working_hours: "true"
    - alert: ProjectQuotaIsRaisingTheLimit
      annotations:
        summary: The quota of the '{{`{{ $labels.project_name }} is getting close to the limit. `}}'
      expr: (harbor_project_quota_usage_byte) / (harbor_project_quota_byte) > 0.8
      for: 5m
      labels:
        severity: critical
        app: harbor
        cancel_if_apiserver_down: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_scrape_timeout: "true"
        cancel_if_outside_working_hours: "true"
    - alert: harborPodPhaseStatus
      annotations:
        description: '{{`{{ $labels.pod }} is an {{ $labels.phase }} phase.`}}'
        summary: "Pods are not in a succeeded phase."
      expr: kube_pod_status_phase{pod=~"^.*harbor.*$", phase=~"Failed|Pending|Unknown"} == 0
      for: 5m
      labels:
        severity: critical
        app: harbor
        cancel_if_apiserver_down: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_scrape_timeout: "true"
        cancel_if_outside_working_hours: "true"
  
