apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: ingress-controller.rules
  namespace: {{ .Values.namespace  }}
spec:
  groups:
  - name: ingress-controller
    rules:
    - alert: IngressControllerDeploymentNotSatisfied
      annotations:
        description: '{{`Ingress Controller Deployment {{ $labels.namespace}}/{{ $labels.deployment }} is not satisfied.`}}'
        opsrecipe: ingress-controller-deployment-not-satisfied/
      expr: managed_app_deployment_status_replicas_available{managed_app="nginx-ingress-controller"} / (managed_app_deployment_status_replicas_available{managed_app="nginx-ingress-controller"} + managed_app_deployment_status_replicas_unavailable{managed_app="nginx-ingress-controller"}) * 100 < 51
      for: 10m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: {{ include "hasToBeCancelled" . }}
        severity: page
        team: cabbage
        topic: ingress
    - alert: IngressControllerMemoryUsageTooHigh
      annotations:
        description: '{{`Ingress Controller {{ $labels.pod }} memory usage is too high.`}}'
        opsrecipe: ic-memory-too-high/
      expr: sum by (node, pod, cluster_id) (container_memory_usage_bytes{pod=~"^nginx.*", container=""}) / ignoring (pod) group_left sum (node_memory_MemTotal_bytes) by (node, cluster_id) * 100 > 33
      for: 3m
      labels:
        area: managedservices
        cancel_if_outside_working_hours: {{ include "hasToBeCancelled" . }}
        severity: notify
        team: cabbage
        topic: ingress
    - alert: IngressControllerReplicaSetNumberTooHigh
      annotations:
        description: '{{`Ingress Controller ReplicaSet in namespace {{ $labels.namespace}} has {{ $value }} pods.`}}'
        opsrecipe: high-number-replicasets/
      expr: count(kube_replicaset_spec_replicas{replicaset=~"nginx-ingress-controller-[a-z0-9]{10}"}) by (cluster_id, namespace) > 15
      for: 2m
      labels:
        area: managedservices
        cancel_if_outside_working_hours: {{ include "hasToBeCancelled" . }}
        severity: notify
        team: cabbage
        topic: ingress
    - alert: IngressControllerServiceHasNoEndpoints
      annotations:
        description: '{{`Ingress Controller has no live endpoints.`}}'
        opsrecipe: ingress-controller-no-live-endpoints.md
      expr: count by (cluster_id) (kube_endpoint_address_available{endpoint="nginx-ingress-controller"}) == 0
      for: 2m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_outside_working_hours: {{ include "hasToBeCancelled" . }}
        severity: page
        team: cabbage
        topic: ingress
    - alert: NginxIngressDown
      annotations:
        description: '{{`nginx-ingress-controller-app in namespace {{ $labels.namespace }}) is down.`}}'
        opsrecipe: nginx-ingress-controller-app-down/
      expr: up{app=~".*nginx-ingress-controller-app.*"} == 0
      for: 15m
      labels:
        area: managedapps
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: {{ include "hasToBeCancelled" . }}
        severity: page
        team: cabbage
        topic: ingress
