{{- if eq .Values.managementCluster.provider.kind "aws" }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    {{- include "labels.common" . | nindent 4 }}
    cluster_type: "workload_cluster"
  name: kiam.rules
  namespace: {{ .Values.namespace  }}
spec:
  groups:
  - name: kiam
    rules:
    - alert: KiamMetadataFindRoleErrors
      annotations:
        description: '{{`Kiam pod {{ $labels.namespace}}/{{ $labels.pod_name }} on {{ $labels.cluster_id}}/{{ $labels.cluster }} has increased metadata find role errors.`}}'
        opsrecipe: kiam-find-role-errors/
      expr: increase(kiam_metadata_find_role_errors_total[10m]) > 0
      for: 15m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: "true"
        severity: page
        team: phoenix
        topic: kiam
    - alert: KiamDaemonsetNotCleanedUp
      annotations:
        description: '{{`Kiam daemonset kube-system/{{ $labels.daemonset }} on {{ $labels.installation}}/{{ $labels.cluster_id }} was not deleted afeter app was removed.`}}'
        opsrecipe: kiam-daemonset-not-cleaned-up/
      expr: count(kube_daemonset_created{daemonset=~"kiam-agent|kiam-server|kiam-watchdog"})  by (cluster_id,daemonset,installation) unless on (installation,cluster_id) label_replace(aggregation:giantswarm:app_info{name="kiam"}, "cluster_id", "$1", "namespace", "(.*)")
      for: 60m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_outside_working_hours: "true"
        severity: page
        team: phoenix
        topic: kiam
{{- end }}
