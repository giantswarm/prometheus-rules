apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: kong.rules
  namespace: {{ .Values.namespace  }}
spec:
  groups:
  - name: kong
    rules:
    # Kong uses either an internal (memory) or external (postgres) datastore to store internal state.
    # In case the datastore is not reachable, new pods cannot restore previous state.
    - alert: KongDatastoreNotReachable
      annotations:
        description: '{{`Datastore of Kong in namespace {{ $labels.namespace }} is not reachable.`}}'
        opsrecipe: managed-app-kong/#kong-datastore-not-reachable
      expr: kong_datastore_reachable == 0
      for: 10m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_outside_working_hours: "false"
        severity: page
        team: cabbage
        topic: kong
    - alert: KongDeploymentNotSatisfied
      annotations:
        description: '{{`Kong Deployment {{ $labels.namespace}}/{{ $labels.deployment }} is not satisfied.`}}'
        opsrecipe: workload-cluster-managed-deployment-not-satisfied/
      expr: managed_app_deployment_status_replicas_available{managed_app=~"kong.*"} / (managed_app_deployment_status_replicas_available{managed_app=~"kong.*"} + managed_app_deployment_status_replicas_unavailable{managed_app=~"kong.*"}) < 0.6
      for: 30m
      labels:
        area: managedservices
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_outside_working_hours: "false"
        severity: page
        team: cabbage
        topic: kong
