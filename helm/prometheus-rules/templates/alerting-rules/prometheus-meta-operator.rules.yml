apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: prometheus-meta-operator
  namespace: {{ .Values.namespace  }}
spec:
  groups:
  - name: observability
    rules:
    - alert: "Heartbeat"
      expr: up{app="prometheus"}
      for: 10m
      labels:
        area: "empowerment"
        installation: {{ .Values.managementCluster.name }}
        team: "atlas"
        topic: "observability"
        type: "heartbeat"
      annotations:
        description: This alert is used to ensure the entire alerting pipeline is functional.
    - alert: MatchingNumberOfPrometheusAndCluster
      annotations:
        description: "{{ $labels.installation }}/{{ $labels.cluster_id}} prometheus server is missing."
        opsrecipe: matching-number-of-prometheus-and-cluster/
      # This expression list all the cluster IDs that exist and are not being deleted and compares them (using unless) to the running prometheus pods.
      # If a prometheus is missing, this alert will fire. This alert will not check if a prometheus is running when it should not (e.g. deleted cluster)
      expr: |
        (
          sum by(cluster_id) (
            {__name__=~"cluster_service_cluster_info|cluster_operator_cluster_status", status!="Deleting"}
          ) unless sum by(cluster_id) (
            label_replace(
              kube_pod_container_status_running{container="prometheus", namespace!="{{ .Values.managementCluster.name }}-prometheus", namespace=~".*-prometheus"},
              "cluster_id", "$2", "pod", "(prometheus-)(.+)(-.+)"
            )
          )
        ) > 0
      labels:
        area: "empowerment"
        installation: {{ .Values.managementCluster.name }}
        severity: "page"
        team: "atlas"
        topic: "observability"
