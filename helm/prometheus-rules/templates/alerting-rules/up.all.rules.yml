apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: up.all.rules
  namespace: {{ .Values.namespace  }}
spec:
  groups:
  - name: up.all
    rules:
    - alert: ChartOperatorDown
      annotations:
        description: '{{`ChartOperator ({{ $labels.instance }}) is down.`}}'
        opsrecipe: chart-operator-down/
      expr: label_replace(up{app=~"chart-operator.*"}, "ip", "$1.$2.$3.$4", "node", "ip-(\\d+)-(\\d+)-(\\d+)-(\\d+).*") == 0
      for: 15m
      labels:
        area: managedservices
        cancel_if_apiserver_down: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_status_updating: "true"
        cancel_if_kubelet_down: "true"
        cancel_if_cluster_has_no_workers: "true"
        cancel_if_outside_working_hours: {{ include "workingHoursOnly" . }}
        severity: notify
        team: honeybadger
        topic: releng
    - alert: CadvisorDown
      annotations:
        description: '{{`Cadvisor ({{ $labels.instance }}) is down.`}}'
        opsrecipe: kubelet-is-down/
      expr: label_replace(up{app="cadvisor"}, "ip", "$1", "instance", "(.+):\\d+") == 0
      for: 1h
      labels:
        area: kaas
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_kubelet_down: "true"
        cancel_if_cluster_has_no_workers: "true"
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    - alert: KubeStateMetricsDown
      annotations:
        description: '{{`KubeStateMetrics ({{ $labels.instance }}) is down.`}}'
        opsrecipe: kube-state-metrics-down/
      expr: |-
        (
          # modern clusters
          label_replace(up{app="kube-state-metrics",instance=~".*:8080"}, "ip", "$1.$2.$3.$4", "node", "ip-(\\d+)-(\\d+)-(\\d+)-(\\d+).*") == 0 or absent(up{app="kube-state-metrics",instance=~".*:8080"} == 1)
        )
        and
        (
          # vintage clusters without servicemonitor
          label_replace(up{app="kube-state-metrics",container=""}, "ip", "$1.$2.$3.$4", "node", "ip-(\\d+)-(\\d+)-(\\d+)-(\\d+).*") == 0 or absent(up{app="kube-state-metrics",container=""} == 1)
        )
      for: 15m
      labels:
        area: kaas
        cancel_if_apiserver_down: "true"
        cancel_if_cluster_status_creating: "true"
        cancel_if_cluster_status_deleting: "true"
        cancel_if_cluster_has_no_workers: "true"
        inhibit_kube_state_metrics_down: "true"
        cancel_if_kubelet_down: "true"
        cancel_if_outside_working_hours: "false"
        severity: page
        team: atlas
        topic: observability

