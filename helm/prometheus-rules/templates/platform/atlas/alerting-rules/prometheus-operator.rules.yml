apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: prometheus-operator.rules
  namespace: {{ .Values.namespace  }}
spec:
  groups:
  - name: prometheus-operator
    rules:
    - alert: PrometheusOperatorDown
      annotations:
        description: '{{`Prometheus-operator ({{ $labels.instance }}) is down.`}}'
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/prometheus-operator/
      expr: up{job=~"prometheus-operator-app-operator|kube-prometheus-stack-operator"} == 0
      for: 15m
      labels:
        area: platform
        cancel_if_cluster_control_plane_unhealthy: "true"
        cancel_if_cluster_has_no_workers: "true"
        cancel_if_outside_working_hours: {{ include "workingHoursOnly" . }}
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorListErrors
      annotations:
        description: Errors while performing List operations in controller {{`{{`}}$labels.controller{{`}}`}} in {{`{{`}}$labels.namespace{{`}}`}} namespace.
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/prometheus-operator/
      expr: (sum by (cluster_id, installation, provider, pipeline, controller, namespace) (rate(prometheus_operator_list_operations_failed_total{job=~"prometheus-operator-app-operator|kube-prometheus-stack-operator"}[10m])) / sum by (cluster_id, installation, provider, pipeline, controller, namespace) (rate(prometheus_operator_list_operations_total{job=~"prometheus-operator-app-operator|kube-prometheus-stack-operator"}[10m]))) > 0.4
      for: 15m
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorWatchErrors
      annotations:
        description: Errors while performing watch operations in controller {{`{{`}}$labels.controller{{`}}`}} in {{`{{`}}$labels.namespace{{`}}`}} namespace.
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/prometheus-operator/
      expr: (sum by (cluster_id, installation, provider, pipeline, controller, namespace) (rate(prometheus_operator_watch_operations_failed_total{job=~"prometheus-operator-app-operator|kube-prometheus-stack-operator"}[10m])) / sum by (cluster_id, installation, provider, pipeline, controller, namespace) (rate(prometheus_operator_watch_operations_total{job=~"prometheus-operator-app-operator|kube-prometheus-stack-operator"}[10m]))) > 0.4
      for: 15m
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorNodeLookupErrors
      annotations:
        description: Errors while reconciling Prometheus in {{`{{`}} $labels.namespace {{`}}`}} Namespace.
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/prometheus-operator/
      expr: rate(prometheus_operator_node_address_lookup_errors_total{job=~"prometheus-operator-app-operator|kube-prometheus-stack-operator"}[5m]) > 0.1
      for: 10m
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    - alert: PrometheusOperatorNotReady
      annotations:
        description: Prometheus operator in {{`{{`}} $labels.namespace {{`}}`}} namespace isn't ready to reconcile {{`{{`}} $labels.controller {{`}}`}} resources.
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/prometheus-operator/
      expr: min by (cluster_id, installation, provider, pipeline, namespace, controller) (max_over_time(prometheus_operator_ready{job=~"prometheus-operator-app-operator|kube-prometheus-stack-operator"}[5m]) == 0)
      for: 5m
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
    # This one depends on the validity of the watched resources. On WCs, these resources are created by customers and we don't want these to page us. So we only run this rule for MCs.
    - alert: PrometheusOperatorRejectedResources
      annotations:
        description: Prometheus operator in {{`{{`}} $labels.namespace {{`}}`}} namespace rejected {{`{{`}} printf "%0.0f" $value {{`}}`}} {{`{{`}} $labels.controller {{`}}`}}/{{`{{`}} $labels.resource {{`}}`}} resources.
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/prometheus-operator/
      expr: min_over_time(prometheus_operator_managed_resources{state="rejected", job=~"prometheus-operator-app-operator|kube-prometheus-stack-operator", cluster_type="management_cluster"}[5m]) > 0
      for: 5m
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: atlas
        topic: observability
