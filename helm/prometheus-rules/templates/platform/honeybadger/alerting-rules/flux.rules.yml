apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: fluxcd.rules
  namespace: {{ .Values.namespace  }}
spec:
  groups:
  - name: fluxcd
    rules:
    - alert: FluxDeploymentNotSatisfied
      annotations:
        description: '{{`Flux deployment {{ $labels.namespace}}/{{ $labels.deployment }} is not satisfied.`}}'
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/deployment-not-satisfied/
      expr: kube_deployment_status_replicas_unavailable{cluster_type="management_cluster", namespace=~"flux-.*"} > 0
      for: 30m
      labels:
        area: platform
        cancel_if_outside_working_hours: {{ include "workingHoursOnly" . }}
        severity: page
        team: honeybadger
        topic: managementcluster
#
# FluxHelmReleaseFailed
#
# Alerting for GiantSwarm management clusters HelmRelease CRs.
#
    - alert: FluxHelmReleaseFailed
      annotations:
        description: |-
          {{`Flux HelmRelease {{ $labels.name }} in ns {{ $labels.exported_namespace }} on {{ $labels.installation }}/{{ $labels.cluster_id }} is stuck in Failed state.`}}
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/fluxcd-failing-helmrelease/
      expr: gotk_resource_info{ready="False", customresource_kind="HelmRelease", cluster_type="management_cluster", exported_namespace=~".*giantswarm.*"} > 0
      for: 10m
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: honeybadger
        topic: releng
        namespace: |-
          {{`{{ $labels.exported_namespace }}`}}
#
# FluxWorkloadClusterHelmReleaseFailed
#
# Alerting for GiantSwarm-owned workload clusters. The `organization` label makes sure of that.
#
    - alert: FluxWorkloadClusterHelmReleaseFailed
      annotations:
        description: |-
          {{`Flux HelmRelease {{ $labels.name }} in ns {{ $labels.exported_namespace }} on {{ $labels.installation }}/{{ $labels.cluster_id }} is stuck in Failed state.`}}
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/fluxcd-failing-helmrelease/
      expr: gotk_resource_info{ready="False", job="kube-state-metrics", customresource_kind="HelmRelease", cluster_type="workload_cluster", organization="giantswarm"} > 0
      for: 10m
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: honeybadger
        topic: releng
        namespace: |-
          {{`{{ $labels.exported_namespace }}`}}
#
# FluxKustomizationFailed
#
# Alerting for GiantSwarm management clusters Kustomization CRs.
#
    - alert: FluxKustomizationFailed
      annotations:
        description: |-
          {{`Flux Kustomization {{ $labels.name }} in ns {{ $labels.exported_namespace }} on {{ $labels.installation }}/{{ $labels.cluster_id }} is stuck in Failed state.`}}
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/fluxcd-failing-kustomization/
      expr: gotk_resource_info{ready="False", customresource_kind="Kustomization", cluster_type="management_cluster", exported_namespace=~".*giantswarm.*", name!="silences"} > 0
      for: 20m
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: honeybadger
        topic: releng
#
# FluxWorkloadClusterKustomizationFailed
#
# Alerting for GiantSwarm-owned workload clusters. The `organization` label makes sure of that.
#
    - alert: FluxWorkloadClusterKustomizationFailed
      annotations:
        description: |-
          {{`Flux Kustomization {{ $labels.name }} in ns {{ $labels.exported_namespace }} on {{ $labels.installation }}/{{ $labels.cluster_id }} is stuck in Failed state.`}}
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/fluxcd-failing-kustomization/
      expr: gotk_resource_info{ready="False", job="kube-state-metrics", customresource_kind="Kustomization", cluster_type="workload_cluster", organization="giantswarm"} > 0
      for: 2h
      labels:
        area: platform
        severity: page
        cancel_if_outside_working_hours: "true"
        team: honeybadger
        topic: releng
#
# FluxSourceFailed
#
# Alerting for GiantSwarm management clusters Flux source-related CRs.
#
    - alert: FluxSourceFailed
      annotations:
        description: |-
          {{`Flux {{ $labels.customresource_kind }} {{ $labels.name }} in ns {{ $labels.exported_namespace }} on {{ $labels.installation }}/{{ $labels.cluster_id }} is stuck in Failed state.`}}
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/fluxcd-failing-source/
      expr: gotk_resource_info{ready="False", customresource_kind=~"GitRepository|HelmRepository|Bucket|OCIRepository", cluster_type="management_cluster", exported_namespace=~".*giantswarm.*"} > 0
      for: 2h
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: honeybadger
        topic: releng
#
# FluxWorkloadClusterSourceFailed
#
# Alerting for GiantSwarm-owned workload clusters. The `organization` label makes sure of that.
#
    - alert: FluxWorkloadClusterSourceFailed
      annotations:
        description: |-
          {{`Flux {{ $labels.customresource_kind }} {{ $labels.name }} in ns {{ $labels.exported_namespace }} on {{ $labels.installation }}/{{ $labels.cluster_id }} is stuck in Failed state.`}}
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/fluxcd-failing-source/
      expr: gotk_resource_info{ready="False", job="kube-state-metrics", customresource_kind=~"GitRepository|HelmRepository|Bucket|OCIRepository", cluster_type="workload_cluster", organization="giantswarm"} > 0
      for: 2h
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: honeybadger
        topic: releng
    # this alert checks average reconciliation times in 10 min windows, then calculates monthly error budget usage for it
    - alert: FluxReconciliationLongErrorBudgetLow
      annotations:
        description: |-
          {{`Flux object {{ $labels.kind }}/{{ $labels.name }} on {{ $labels.installation }}/{{ $labels.cluster_id }} is below the error threshold of its error budget.`}}
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/fluxcd-slow-reconciliation/
      expr: |
        1-sum_over_time(
        (
          (
          sum(increase(gotk_reconcile_duration_seconds_sum{namespace="flux-giantswarm", cluster_type="management_cluster", exported_namespace="flux-giantswarm",kind=~"Kustomization|HelmRelease"}[10m])) by (kind, name, cluster_id, installation, pipeline, provider)
          /
          sum(increase(gotk_reconcile_duration_seconds_count{namespace="flux-giantswarm", cluster_type="management_cluster", exported_namespace="flux-giantswarm",kind=~"Kustomization|HelmRelease"}[10m])) by (kind, name, cluster_id, installation, pipeline, provider)
          )
        >bool 360)[7d:10m])
        / (7*24*6) < 0.97
      for: 10m
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: honeybadger
        topic: releng
    - alert: FluxSuspendedForTooLong
      annotations:
        description: |-
          {{`Flux {{ $labels.customresource_kind }} {{ $labels.name }} in ns {{ $labels.exported_namespace }} on {{ $labels.installation }} has been suspended for 24h.`}}
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/fluxcd-suspended-for-too-long/
      expr: gotk_resource_info{cluster_type="management_cluster", exported_namespace="flux-giantswarm", suspended="true"} > 0
      for: 24h
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: honeybadger
        topic: releng
    - alert: FluxWorkqueueTooLong
      annotations:
        description: |-
          {{`Flux artifacts are stuck in work queue for over 1 hour and are not being reconciled.`}}
        runbook_url: https://intranet.giantswarm.io/docs/support-and-ops/ops-recipes/fluxcd-workqueue-too-long/
      expr: |
        sum by (cluster_id, installation, name, namespace, pipeline, provider) (workqueue_unfinished_work_seconds{namespace="flux-giantswarm", cluster_type="management_cluster"}) > 3600.0
      for: 10m
      labels:
        area: platform
        cancel_if_outside_working_hours: "true"
        severity: page
        team: honeybadger
        topic: releng
